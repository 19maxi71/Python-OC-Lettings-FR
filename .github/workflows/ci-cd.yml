name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, production ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect static files
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG: 'False'
        run: python manage.py collectstatic --noinput

      - name: Run tests and coverage
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          coverage run manage.py test
          coverage report --fail-under=80

      - name: Lint with flake8
        run: flake8

  build-and-push:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings:${{ github.sha }}

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
          -H "accept: application/json" \
          -H "authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
